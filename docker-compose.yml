version: "3.8"

services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: edulink_api
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis
            - minio

    nginx:
        image: nginx:alpine
        container_name: edulink_nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network
        depends_on:
            - api

    db:
        image: mysql:8.0
        container_name: edulink_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: edulink_redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - app-network

    minio:
        image: minio/minio
        container_name: edulink_minio
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
            MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data
        command: server /data --console-address ":9001"
        networks:
            - app-network

    mailhog:
        image: mailhog/mailhog
        container_name: edulink_mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
    minio_data:
